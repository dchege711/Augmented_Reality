# Technology Research

* To get a feel of how AR works, we set out to create an AR experience at the E-Quad.
* As expected with Microsoft :angry: their tutorials are in Visual Studio. 
* Download the requirements using the [instructions on this page](https://developer.microsoft.com/en-us/windows/mixed-reality/install_the_tools)

## Building a Unity App
* HoloLens can run a mixed reality app created in Unity.
* I'll start by trying out the newbie tutorial, Roll-a-Ball

## [Roll-a-Ball](https://unity3d.com/learn/tutorials/projects/roll-ball-tutorial)
* The game has a ball, and 12 collectible cubes. 
* The player wins once the ball touches all the cubes.
* I've included a build for Windows in Roll_A_Ball/Builds here on Github
* The next step is to port that to the HoloLens.

## [Porting to HoloLens](https://developer.microsoft.com/en-us/windows/mixed-reality/unity_development_overview)
* So I couldn't get away with Windows 8.1; I had to upgrade to Windows 10 :angry:
* As of my current understanding, there are 2 steps to developing AR content for the HoloLens:
	* Developing 3D content using software like Unity. 
		* You could potentially use lower-level language, but there'd be too much lifting.
		* Unity uses C# and JavaScript for its script, so it's not like it's 100% new.
		* However, Unity handles lower-level code like handling collisions between game objects, which is convenient.
	* Presenting the 3D content using the HoloLens.
		* In the simplest form, your app/game isn't aware of the surrounding. In this sense, it's using the HoloLens as it would a phone's screen.
		* In the 'true AR' form, your app/game maps the surroundings and is aware of it. For example, robots can start emerging from the walls.
* When porting an app to the HoloLens, ensure that your laptop and HoloLens are on the same WiFi network.
		
## Hardware Specs
* The HoloLens, unlike Google Glass, has significant processing power by itself.
* Microsoft is quite dodgy with the specs, so I used this [guy's report](https://buildhololens.com/2016/05/04/detailed-hololens-hardware-specs/).
* Here's a summary of the specifications that I thought may be relevant to Edge Lab:
	* System
		* 2 GB Installed RAM
		* 54.09 GB of Internal Storage Capacity
	* CPU
		* Intel(R) Atom(TM) x5-Z8100P CPU @ 1.04 Ghz
		* 32-bit x86 Instruction Set
		* 4 Logical Processors
		* No fans or heat sinks (at least not that we can see/hear)
	* Holographic Processing Unit (HPU)
		* 1 GB of RAM
		* This one's custom made for the HoloLens :open_mouth:
	* Display
		* 114 MB of dedicated video memory
		* 980 MB of shared system memory
	* Battery
		* 16,500 mWh
	* Operating System
		* Windows 10
		* 900 MB of App Memory Usage Limit
	* Camera
		* 2.4 MP (2048 x 1152) Resolution (Google Glass had 5 MP, HTC Vive has 2160 x 1200)
		* 1.1 MP (1408 x  792) Video Resolution (Google Glass had 720p)
		* 30 fps Video Speed
		* 50 Hz Power Line Frequency
		* 2 Special Cameras on each side: a depth camera & an ambient light sensor. 
	* Storage Device
		* 64 GB Toshiba 064G32 (Google Glass had 12 GB)
	* Wi-Fi & Bluetooth Enabled (So did Google Glass)
		
	
	
	
	
	
	
	
	
	
	
	
		